version: '3.8'

services:
    db:
        container_name: db
        image: postgres
        environment:
            - POSTGRES_PASSWORD=user123
            - POSTGRES_DB=transcendence
        ports:
            - 5432:5432
        volumes:
            - ./Back/postgres:/data/postgres
        networks:
            - nestjs-network
        restart: always
    nestjs:
        container_name: nestjs
        image: nestjs:1.0.0
        build:
            context: ./Back
        ports:
            - 3000:3000
        networks:
            - nestjs-network
        restart: always
        depends_on:
            - db
    adminer:
        image: adminer:4
        container_name: adminer
        ports:
            - 8080:8080
        restart: always
        networks:
            - nestjs-network
    angular:
        depends_on:
            - nestjs
        build:
            context: ./front
        image: angularjs
        container_name: angular
        ports:
            - 4200:4200
        environment:
            - NGINX_PORT=4200
        networks:
            - nestjs-network
        restart: always

networks:
    nestjs-network:
        driver: bridge
volumes:
    postgres:

        #volumes:
          #  - ./Front/nginx/conf:/etc/nginx/conf.d
           # - ./Front/angular/src:/var/www/html
            #- ./Front/nginx/secrets/key:/etc/ssl/private
            #- ./Front/nginx/secrets/certs:/etc/ssl/certs